# Copyright (c) 2015 Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

if ARCH_BOARD_ARA_BRIDGE

config ARA_BRIDGE_HAVE_USB4624
	bool
	depends on ARCH_CHIP_USB_HCD
	depends on DEVICE_CORE
	default y

config ARA_BRIDGE_HAVE_USB3813
	bool
	depends on ARCH_CHIP_USB_PCD
	depends on DEVICE_CORE
	default y

config ARA_BRIDGE_HAVE_HID_DEVICE
	bool "Generic HID Device Driver"
	select DEVICE_CORE
	default n
	---help---
		This is a generic HID driver that vendor
		can hook up with HW  specific require code
		in FDK

config ARA_BRIDGE_HAVE_HID_TOUCH
	bool "Multi-Touch HID Support"
	depends on ARA_BRIDGE_HAVE_HID_DEVICE
	select GPIO
	select DEVICE_CORE
	default n
	---help---
		Multi-Touch HID Device Driver

config ARA_BRIDGE_HAVE_LIGHTS
	bool "Lights Support"
	depends on ARCH_CHIP_GPBRIDGE
	select DEVICE_CORE
	default n
	---help---
		Lights Device Driver

config BOARD_HAVE_DISPLAY
	bool "Display support for Board"
	default n
	select GPIO

config ARA_BRIDGE_HAVE_POWER_SUPPLY
	bool "Power Supply Support"
	select DEVICE_CORE
	default n
	---help---
		Power Supply Driver

config BOARD_HAVE_AUDIO
	bool "Audio support for board"
	depends on GPBRIDGE
	default n
	---help---
		A Greybus Audio Module has at least one Audio Bundle.
		Each Audio Bundle represents an audio codec and has
		exactly one Audio Management CPort and one or more
		Audio Data CPorts.  Each Audio Data CPort corresponds
		to a usable I2S connection on the associated codec.
		An I2S connection is also known as a Digital Audio
		Interface (DAI).

		Audio Bundle information is specified in the module's
		manifest but there is no easy way for drivers on the
		module to access that information.  This driver provides
		that information in a relatively easy manner and is
		required for Greybus audio to work.

config BOARD_COMMON_CODEC
	bool

config BOARD_CODEC_RT5647
	bool "Realteck ALC5647 Audio Codec Support"
	depends on BOARD_HAVE_AUDIO
	select BOARD_COMMON_CODEC
	default n
	---help---
		Select to enable Greybus audio support using the
		Realtek ALC5647 audio codec.

config BOARD_CODEC_NXP9890
	bool "Skeleton NXP 9890A Audio Codec Support "
	depends on BOARD_HAVE_AUDIO
	select BOARD_AUDIO_CODEC
	default n
	---help---
		Select to enable Greybus audio support using the
		NXP TFA9890A audio codec.

config APBRIDGEA_AUDIO
	bool "Direct audio data streaming to/from APBridgeA"
	depends on APBRIDGEA
	select APBRIDGEA_INTERCEPT
	select DEVICE_CORE
	select LIB_RING_BUF
	default n
	---help---
		Normally, Greybus Audio Data Messages are sent between the
		AP and APBridgeA using the standard USB/HSIC link between
		the AP and APBridgeA.  However, APBridgeA has its own I2S
		port and can send and receive audio data through that port.
		This option enables that feature.  Enabling this feature
		does not prevent the USB/HSIC link from being used unless
		direct audio data streaming is enabled for that CPort.

		When enabled, I2S port and Greybus Audio Data message
		configuration is done by the AP using APBridgeA's Special
		Audio Protocol.  Messages for this protocol are sent and
		received between the AP and APBridgeA using USB control
		messages.

		When active, I2S data received on APBridgeA's I2S port will
		be packetized into Greybus Audio Data Messages and sent to
		an Audio Module using the specified CPort.  Greybus Audio
		Data Messages received from an Audio Module on the specified
		CPort will be de-packetized and sent out APBridgeA's I2S port.

choice
	prompt "Select a bridge firmware configuration"
	depends on BOARD_HAVE_DISPLAY
config APB_AP
	bool "APBridge for AP Module"
	select ARCH_CHIP_DEVICE_CSI
config APB_DISPLAY
	bool "APBridge for Display Module"
	depends on BOARD_HAVE_DISPLAY
	select GPIO_TCA64XX
endchoice

choice
	prompt "Board"
	---help---
		Board which bridge firmware runs on. Examples include a
		big dev board (BDB), software dev board (SDB), or form-factor module.

config ARA_BRIDGE_BOARD_ARA_DEVBOARD
	bool "BDB2 or SDB"

config ARA_BRIDGE_BOARD_OOT
	bool "Board whose sources are out-of-tree"
	---help---
		With this choice, the object files in OOT_OBJS will be linked with
		the in-tree object files.
endchoice

if APBRIDGEA
# USBDEV_DMA is required by APBridgeA gadget
# but the option is not available if USBDEV is not selected.
if !USBDEV
config USBDEV_DMA
	bool
endif

config APBRIDGE_VENDORID
	hex "Vendor ID"

config APBRIDGE_PRODUCTID
	hex "Product ID"

config APB_USB_LOG
	bool "Send APB log over usb"

config USB_LOG_BUFFER_SIZE
	int "Size of log buffer"
	default 4096
	depends on APB_USB_LOG
endif

endif
